(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{184:function(e,n,r){"use strict";r.r(n);var s=r(0),t=Object(s.a)({},function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",{staticClass:"content"},[r("p",[e._v('Docker entre en jeu pour tenter de résoudre un problème qui existe dès lors\nque l\'on développe une application, un site web ou tout autre programme\ninformatique à savoir : "mon programme fonctionne en local mais il ne fonctionne\npas sur le serveur."')]),e._v(" "),r("p",[e._v("En clair, le serveur qui héberge mon site n'a pas forcément la même\nconfiguration, les mêmes versions d'apache, de nginx, mysql, .... que mon\nordinateur local.")]),e._v(" "),r("p",[e._v("Pour pallier ce problème, les développeurs utilisent souvent les machines\nvirtuelles qui permettent de lancer en parallèle des OS entiers sur notre\nmachine. Ainsi en local, on peut recréer entièrement l'OS qui se trouve\nsur notre serveur. Faire tourner une machine virtuelle basée sur Linux, sur\nson mac n'est plus un problème.")]),e._v(" "),r("p",[e._v("Les inconvénients des machines virtuelles (VM Virtual Machine en english) sont\nla taille qu'ils prennent sur notre ordinateur (plusieurs Go de données) et\nle temps qu'ils mettent à démarrer (provisionner en langage technique).")]),e._v(" "),r("p",[e._v("Docker permet de s'affranchir de ces limitations. L'idée de Docker est de\ncréer des containers, sorte de mini machines virtuelles, qui ne\ncontiendront que des processus isolés les uns des autres. On fait donc\ntourner un processus de nginx (serveur web) dans un container, un processus de\nmysql dans un autre container et on les lie les uns aux autres. En plus d'être\nrapide à démarrer, plusieurs containers peuvent être démarrés en même temps\net on s'imagine tous les avantages que cela va pouvoir avoir pour les différents\ntests que l'on va faire subir à notre code.")]),e._v(" "),r("p",[e._v("Envie d'installer et d'utiliser Docker ? Suivez le guide !")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),r("p",[e._v("Suivez les instructions de "),r("a",{attrs:{href:"http://docs.docker.com/mac/step_one",target:"_blank",rel:"noopener noreferrer"}},[e._v("la page"),r("OutboundLink")],1),e._v(".")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("Avec Docker, on va pouvoir isoler des processus dans des containers et les lier\nles uns aux autres. Cette technique permet d'isoler les processus et ainsi\nde pouvoir en lancer plusieurs en parallèle. Par exemple lancer en parallèle\nplusieurs containers contenant chacun un serveur apache ne sera plus un soucis.\nLe lancement d'un container est tellement rapide, que l'on pourra les lancer ou\nles stopper très rapidement (quelques secondes).")]),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("Il vous faudra installer docker-compose qui est un petit outil pour gérer\nses containers: "),r("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker-compose"),r("OutboundLink")],1),e._v(". A\npriori, il est déjà installé si vous avez installé Docker avec la\ndocker-toolbox.")]),e._v(" "),r("p",[e._v("Concrètement, dans chaque projet web on aura un fichier docker-composer.yml qui\ncontiendra l'ensemble des containers à lancer et leurs configurations.")]),e._v(" "),r("p",[e._v("Fini les requirements pour installer tel ou tel programme ! Avoir docker et\ndocker-compose sur son ordinateur permettra d'installer et de lancer les\ncontainers qui contiendront les processus nécessaires ! Youpi ! Fini les\ninstallations chaotiques de librairies php comme mcrypt (en passant mcrypt est\ndeprecié donc à ne plus jamais installer et utiliser!).")]),e._v(" "),r("p",[e._v("On aura donc uniquement une commande à lancer et les containers nécessaires à\nl'application, définis dans le docker-composer.yml, seront lancés:")]),e._v(" "),e._m(7),e._v(" "),r("p",[e._v("Et comme par magie, tous les containers contenant des processus comme Apache,\nMySql, Jenkins, etc... seront lancés. Ils seront chacun isolés dans des\ncontainers ce qui permettra de relancer ceux que l'on souhaite si besoin. Il\nfaudra bien sur penser à définir un chemin du dossier du projet (appelé volume\ndans Docker) qui sera accessible pour les containers souhaités.")]),e._v(" "),r("p",[e._v("On se rend donc compte que la difficulté va être de bien définir des fichiers\nDockerfile pour chaque processus souhaité.")]),e._v(" "),e._m(8),e._v(" "),r("p",[e._v("Les applications classiques ont déjà toutes créé des Dockerfile à partir\ndesquels on peut se baser pour créer nos propres Dockerfile.")]),e._v(" "),r("p",[e._v("Ces Dockerfiles sont mis à diposition sur le "),r("a",{attrs:{href:"https://hub.docker.com/explore",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dockerhub"),r("OutboundLink")],1),e._v(", il vaut mieux utiliser les\nDockerfiles officiels dans un premier temps et ensuite vous pourrez créer les\nvotres à partir des officiels.")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),r("p",[e._v("Les dockerfiles que j'utilise se trouvent sur\n"),r("a",{attrs:{href:"https://hub.docker.com/u/cakephpfr/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dockerhub"),r("OutboundLink")],1),e._v(" et sont hebergés sur\n"),r("a",{attrs:{href:"https://github.com/cakephp-fr/docker/tree/master/cakephp/3.x",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),r("OutboundLink")],1),e._v(", vous\npouvez vous en inspirer pour créer les votres ou les utiliser si vous avez\nconfiance (en contradiction avec le dernier paragraphe sur l'utilisation des\nDockerfiles officiels ...).")]),e._v(" "),r("p",[e._v("Le dépôt cakephpfr/3.x contient les Dockerfiles pour les containers nginx et\nphp.")]),e._v(" "),e._m(13),e._v(" "),r("p",[e._v("Maintenant pour orchestrer tous ces containers, je vais utiliser Docker-compose\net un fichier docker-compose.yml que je vais mettre à la racine de mon projet\nCakePHP 3. Une version avec le fichier docker-compose.yml se trouve sur\n"),r("a",{attrs:{href:"https://github.com/cakephp-fr/app/tree/docker",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),r("OutboundLink")],1)]),e._v(" "),e._m(14),e._v(" "),r("p",[e._v("Et voilà !")])])},[function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"docker-toolbox"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-toolbox","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker Toolbox")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("Docker fonctionne directement en natif sur linux, mais pas sur un MAC (le\nprogramme est encore en beta donc ne devrait pas tarder...).\nTéléchargez "),n("code",[this._v("Docker Toolbox")]),this._v(" qui va s'occuper de toute l'installation\nde tous les logiciels dont vous aurez besoin pour faire fonctionner\nDocker.")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"installer-docker-sur-un-mac"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installer-docker-sur-un-mac","aria-hidden":"true"}},[this._v("#")]),this._v(" Installer Docker sur un MAC")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"lancer-docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lancer-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" Lancer Docker")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("Lancez LaunchPad et choisissez "),n("code",[this._v("Docker Terminal")]),this._v(". Vous avez aussi la possibilité\nde lancer "),n("code",[this._v("Kitematic")]),this._v(" qui est une version graphique de Docker mais je trouve\nqu'on comprend mieux le fonctionnement et qu'on a accès à toutes les\nfonctionnalités de docker grâce au terminal.")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"une-histoire-de-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#une-histoire-de-containers","aria-hidden":"true"}},[this._v("#")]),this._v(" Une histoire de containers")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"docker-compose-l-outil-ultime-pour-lancer-et-lier-ses-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-l-outil-ultime-pour-lancer-et-lier-ses-containers","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker-compose, l'outil ultime pour lancer et lier ses containers")])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v("docker-compose up\n")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"creer-son-dockerfile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creer-son-dockerfile","aria-hidden":"true"}},[this._v("#")]),this._v(" Créer son Dockerfile")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"un-exemple-concret-avec-une-application-cakephp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#un-exemple-concret-avec-une-application-cakephp","aria-hidden":"true"}},[this._v("#")]),this._v(" Un exemple concret avec une application CakePHP")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("Je vais créer une application CakePHP qui nécessitera plusieurs containers.\nTout d'abord le premier container sera celui de php 7 (tant qu'à faire,\nutilisons la dernière version) que j'appelerai, ô grande surprise "),n("code",[this._v("php")]),this._v(". Les\nextensions intl, mbstring etc... nécessaires à CakePHP sont installées dans ce\ncontainer. Vous pouvez regarder le Dockerfile pour vous donner une idée.")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("Ensuite notre application utilisera une base de données mariadb donc un\ncontainer "),n("code",[this._v("db")]),this._v(" séparé avec mariadb installé. Mariadb est une version libre de\nmysql ayant exactement les mêmes fonctionnalités que mysql. Je souhaite\ndévelopper et donc tester mon code avec phpunit, je vais donc créer un autre\ncontainer "),n("code",[this._v("dbtest")]),this._v(" avec mariadb pour séparer la base de données de l'application\net la base de données de test.\nPour ces deux containers, pas besoin de créer un Dockerfile, j'utilise le\nDockerfile officiel de mariadb présent sur Dockerhub.")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("Et enfin un serveur nginx et donc un container appelé "),n("code",[this._v("nginx")]),this._v(".")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"un-docker-compose-yml-aux-petits-oignons"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#un-docker-compose-yml-aux-petits-oignons","aria-hidden":"true"}},[this._v("#")]),this._v(" Un Docker-compose.yml aux petits oignons")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("Suivez les instructions du README et normalement avec la commande\n"),n("code",[this._v("docker-compose up -d")]),this._v(" vous devriez avoir lancé tous les containers configurés.\nNe reste plus qu'à se rendre sur localhost (si docker installé en natif) ou sur\nhttp://MACHINE_IP:NGINX_PORT (ie. http://192.168.99.100:32779). Encore une fois,\ntout est détaillé dans le README.")])}],!1,null,null,null);n.default=t.exports}}]);