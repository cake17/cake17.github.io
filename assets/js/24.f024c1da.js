(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{180:function(e,t,s){"use strict";s.r(t);var r=s(0),o=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors","aria-hidden":"true"}},[e._v("#")]),e._v(" Cors")]),e._v(" "),s("p",[e._v("Avant: Same-origin Policy")]),e._v(" "),s("p",[e._v("On ne pouvait appeler que les urls du m$eme protocole, domaine et port.")]),e._v(" "),s("p",[e._v("Ex: la requête POST depuis www.monsite.com vers www.autresite.com serait bloquée")]),e._v(" "),s("p",[e._v("Les navigateurs se sont mis d'accord sur une façon de pouvoir partager les urls d'un serveur.")]),e._v(" "),s("p",[e._v("Ex: Pouvoir aller chercher du json d'1 serveur B htts://www.monsite.com/data.json ou htts://www.monsite.com/img.jpg")]),e._v(" "),s("p",[e._v("Maintenant: Cross Origin Resource Sharing")]),e._v(" "),s("p",[e._v("Si GET, POST, HEAD => et/ou Content-Type-test/plain")]),e._v(" "),s("p",[e._v("Preflight Request : vérification supplémentaire dans les cas suivants:")]),e._v(" "),s("ul",[s("li",[e._v("si method différent de GET, POST ou HEAD")]),e._v(" "),s("li",[e._v("si Content-Type différent de text/plain ou multipart/form-data ou application/x-www-form-urlencoded")])]),e._v(" "),s("p",[e._v("Envoi d'une 1ère request preflight avec la méthode OPTIONS avec")]),e._v(" "),s("ul",[s("li",[e._v("access-control-request-method")]),e._v(" "),s("li",[e._v("access-control-request-headers : Content-Type, accept")])]),e._v(" "),s("p",[e._v("Le serveur répond avec:")]),e._v(" "),s("ul",[s("li",[e._v("access-control-allow-headers-methods")])])])}],!1,null,null,null);t.default=o.exports}}]);